PSEUDOMODULES += msp430_malloc

ASMADDSRC += $(wildcard stubs/*.s)

CFLAGS += -DCPU_MODEL_$(call uppercase_and_underscore,$(CPU_MODEL))

export UNDEF += $(BINDIR)/cpu/startup.o
export USEMODULE += msp430_malloc

DEFAULT_MODULE += oneway_malloc

# do not include the msp430 common Makefile, instead paste it below
# include $(RIOTMAKE)/arch/msp430.inc.mk
# Target architecture for the build. Use msp430 if you are unsure.
export TARGET_ARCH ?= msp430

# Specify to use the Sancus toolchain
# This toolchain is added under RIOTBASE/makefiles/toolchain/sancus-gcc.mk
# And uses the sancus-ld instead of gcc
TOOLCHAIN = sancus-gcc
TOOLCHAINS_SUPPORTED += sancus-gcc
#PREFIX = gnu
#export LINK = sancus-ld

#CFLAGS += -c

# define build specific options
CFLAGS_CPU   = -mmcu=$(CPU_MODEL)
# default std set to gnu99 of not overwritten by user
ifeq (, $(filter -std=%, $(CFLAGS)))
  CFLAGS += -std=gnu99
endif

CFLAGS_LINK  = -ffunction-sections -fdata-sections
#CFLAGS_DBG  ?= -gdwarf-2
# CFLAGS_OPT  ?= -Os
CFLAGS += $(CFLAGS_CPU) $(CFLAGS_LINK) $(CFLAGS_DBG) $(CFLAGS_OPT) 
CFLAGS += --debug
# Just compile assembly files
ASFLAGS +=  -c #$(CFLAGS_CPU)  $(CFLAGS_DBG) #--defsym $(CPU_MODEL)=1
# export linker flags
# removed:  
# removed: 
# removed: 
#-lgcc
export LINKFLAGS += -Wl,--gc-sections 
export LINKFLAGS += $(CFLAGS_CPU) $(CFLAGS_DBG) $(CFLAGS_OPT) -static 
# Sancus linker requires standalone flag to link everything in
export LINKFLAGS += --standalone --ram-size=16K --rom-size=41K 
# Enable for linker debug output on stdout
# export LINKFLAGS += --debug

OPTIONAL_CFLAGS_BLACKLIST += -fdiagnostics-color
OPTIONAL_CFLAGS_BLACKLIST += -Wformat-overflow
OPTIONAL_CFLAGS_BLACKLIST += -Wformat-truncation
OPTIONAL_CFLAGS_BLACKLIST += -gz
OPTIONAL_CFLAGS_BLACKLIST += -fno-delete-null-pointer-checks
export USEMODULE += periph stdio_uart
